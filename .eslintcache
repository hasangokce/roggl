[{"D:\\Projects\\roggl\\repo\\src\\index.js":"1","D:\\Projects\\roggl\\repo\\src\\reportWebVitals.js":"2","D:\\Projects\\roggl\\repo\\src\\Components\\App\\App.js":"3","D:\\Projects\\roggl\\repo\\src\\Components\\SideNav\\SideNav.js":"4","D:\\Projects\\roggl\\repo\\src\\Components\\MenuList\\MenuList.js":"5","D:\\Projects\\roggl\\repo\\src\\Components\\ColumnList\\ColumnList.js":"6","D:\\Projects\\roggl\\repo\\src\\Components\\Column\\Column.js":"7","D:\\Projects\\roggl\\repo\\src\\Components\\Menu\\Menu.js":"8","D:\\Projects\\roggl\\repo\\src\\Components\\TopBar\\TopBar.js":"9","D:\\Projects\\roggl\\repo\\src\\util\\Roggl.js":"10"},{"size":532,"mtime":1612812226346,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1612812226387,"results":"13","hashOfConfig":"12"},{"size":401,"mtime":1612968611157,"results":"14","hashOfConfig":"12"},{"size":495,"mtime":1612968441699,"results":"15","hashOfConfig":"12"},{"size":4010,"mtime":1612968601978,"results":"16","hashOfConfig":"12"},{"size":322,"mtime":1612812226328,"results":"17","hashOfConfig":"12"},{"size":793,"mtime":1612812226327,"results":"18","hashOfConfig":"12"},{"size":338,"mtime":1612965868636,"results":"19","hashOfConfig":"12"},{"size":1469,"mtime":1612963311558,"results":"20","hashOfConfig":"12"},{"size":1563,"mtime":1612961947323,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1mhlbv9",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Projects\\roggl\\repo\\src\\index.js",[],["44","45"],"D:\\Projects\\roggl\\repo\\src\\reportWebVitals.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\App\\App.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\SideNav\\SideNav.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\MenuList\\MenuList.js",["46","47","48"],"import React, { Children } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './MenuList.css';\r\nimport { Menu } from '../Menu/Menu'\r\nimport TopBar from '../TopBar/TopBar'\r\nimport Roggl from '../../util/Roggl';\r\nimport ColumnList from '../ColumnList/ColumnList'\r\n\r\n/**\r\n * A React component should use props to store information that can be changed,\r\n * but can only be changed by a different component.\r\n * A React component should use state to store information that the component\r\n * itself can change.\r\n */\r\n\r\nexport default class MenuList extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      active_item: { _id: '', name: '...'},\r\n      menus: [\r\n        { _id: 'null', name: 'Loading...' },\r\n      ]\r\n    }\r\n\r\n    this.addMenu = this.addMenu.bind(this)\r\n    this.handleMenuClick = this.handleMenuClick.bind(this)\r\n    this.removeMenu = this.removeMenu.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    // this.removeTrack = this.removeTrack.bind(this);\r\n  }\r\n\r\n  addMenu() {\r\n    // this.setState({ menus: [...this.state.menus, {id:12, name: 'New collection'}] })\r\n    Roggl.saveBoard({ name: 'New board' }).then(returnedId => {\r\n      // set state\r\n      const newState = {\r\n        ...this.state,\r\n        menus: [\r\n          ...this.state.menus,\r\n          { _id: returnedId, name: 'New board' }\r\n        ],\r\n      };\r\n      this.setState(newState);\r\n    })\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    Roggl.getBoards().then(menus => {\r\n      if (menus.length) {\r\n        this.setState({menus: menus});\r\n        this.setState({active_item: menus[0]});\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  deleteMenu() {\r\n    alert('delete menu called')\r\n  }\r\n\r\n  removeMenu () {\r\n    console.log('remove menu called');\r\n    // get current menu items\r\n    let menus = this.state.menus;\r\n    menus = menus.filter(currentMenu => currentMenu._id !== this.state.active_item._id);\r\n    this.setState({ menus: menus });\r\n    // no operation if there is no menu item\r\n    if (menus[0]) {\r\n      const firstMenu = menus[0]\r\n      this.setState({ active_item: firstMenu })\r\n    }\r\n    // db operation\r\n    Roggl.delete(this.state.active_item._id)\r\n  }\r\n\r\n  handleMenuClick(e) {\r\n    // returns _id such as #342 to 342\r\n    console.log(e.target.hash)\r\n    let _id = e.target.hash.replace('#', '');\r\n\r\n    const name = e.target.text\r\n    console.log(name)\r\n    console.log(e.target);\r\n    const newState = {\r\n      ...this.state,\r\n      active_item: { _id: _id, name: name },\r\n    };\r\n    this.setState(newState);\r\n\r\n    // active menu item stuff\r\n    this.setState({ active: _id });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const _id = this.state.active_item._id\r\n    let name = event.target.value\r\n    console.log(name)\r\n    if (name === '') {\r\n      name = \" \"\r\n    }\r\n    // Fetch update request\r\n    Roggl.update({ _id, name })\r\n    // Update menu state\r\n    let menus = this.state.menus\r\n    // const found = menus.find(element => element.id === _id) // returns elements all data\r\n    const found = menus.findIndex(element => element._id === _id)\r\n    console.log('found: ' + found)\r\n\r\n    if (found) {\r\n      menus[found].name = name\r\n\r\n      this.setState({\r\n        active_item: { _id: _id, name: name },\r\n        menus: menus\r\n      });\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const activeStyle = {\r\n      backgroundColor: 'rgba(25, 25, 25, 0.3)',\r\n    };\r\n    return (\r\n        <div className=\"MenuList\">\r\n          <TopBar active_menu={this.state.active_item} onChange={this.handleChange}></TopBar>\r\n          {\r\n            this.state.menus.map(menu => {\r\n              return <Menu menu={menu} key={menu._id} _id={menu._id} handleMenuClick={this.handleMenuClick} style={this.state.active === menu._id ? activeStyle : {}}  />\r\n            })\r\n          }\r\n          <hr />\r\n          <a href=\"#addMenu\" onClick={this.addMenu}>+ Add new</a>\r\n          <a href=\"#removeMenu\" onClick={this.removeMenu}>- Delete this</a>\r\n        </div>\r\n\r\n      \r\n    );\r\n  }\r\n}","D:\\Projects\\roggl\\repo\\src\\Components\\ColumnList\\ColumnList.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\Column\\Column.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\Menu\\Menu.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\TopBar\\TopBar.js",[],"D:\\Projects\\roggl\\repo\\src\\util\\Roggl.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":2,"column":16,"nodeType":"55","messageId":"56","endLine":2,"endColumn":22},{"ruleId":"53","severity":1,"message":"58","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":18},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Children' is defined but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.","'ColumnList' is defined but never used.","no-global-assign","no-unsafe-negation"]