[{"D:\\Projects\\roggl\\repo\\src\\index.js":"1","D:\\Projects\\roggl\\repo\\src\\reportWebVitals.js":"2","D:\\Projects\\roggl\\repo\\src\\Components\\App\\App.js":"3","D:\\Projects\\roggl\\repo\\src\\Components\\SideNav\\SideNav.js":"4","D:\\Projects\\roggl\\repo\\src\\Components\\MenuList\\MenuList.js":"5","D:\\Projects\\roggl\\repo\\src\\Components\\ColumnList\\ColumnList.js":"6","D:\\Projects\\roggl\\repo\\src\\Components\\Column\\Column.js":"7","D:\\Projects\\roggl\\repo\\src\\Components\\Menu\\Menu.js":"8","D:\\Projects\\roggl\\repo\\src\\Components\\TopBar\\TopBar.js":"9","D:\\Projects\\roggl\\repo\\src\\util\\Roggl.js":"10","D:\\Projects\\roggl\\repo\\src\\Components\\ColumnListNone\\ColumnListNone.js":"11"},{"size":532,"mtime":1612812226346,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1612812226387,"results":"14","hashOfConfig":"13"},{"size":4736,"mtime":1612992759644,"results":"15","hashOfConfig":"13"},{"size":795,"mtime":1612970834032,"results":"16","hashOfConfig":"13"},{"size":1292,"mtime":1612991155387,"results":"17","hashOfConfig":"13"},{"size":454,"mtime":1612976904198,"results":"18","hashOfConfig":"13"},{"size":971,"mtime":1612982777343,"results":"19","hashOfConfig":"13"},{"size":340,"mtime":1612971340179,"results":"20","hashOfConfig":"13"},{"size":1475,"mtime":1612991147419,"results":"21","hashOfConfig":"13"},{"size":1828,"mtime":1612988221501,"results":"22","hashOfConfig":"13"},{"size":474,"mtime":1612993996324,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1mhlbv9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\roggl\\repo\\src\\index.js",[],["48","49"],"D:\\Projects\\roggl\\repo\\src\\reportWebVitals.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\App\\App.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\SideNav\\SideNav.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\MenuList\\MenuList.js",["50","51","52"],"import React, { Children } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './MenuList.css';\r\nimport { Menu } from '../Menu/Menu'\r\nimport TopBar from '../TopBar/TopBar'\r\nimport ColumnList from '../ColumnList/ColumnList'\r\n\r\n/**\r\n * A React component should use props to store information that can be changed,\r\n * but can only be changed by a different component.\r\n * A React component should use state to store information that the component\r\n * itself can change.\r\n */\r\n\r\nexport default class MenuList extends React.Component {\r\n\r\n  render () {\r\n    const activeStyle = {\r\n      backgroundColor: 'rgba(25, 25, 25, 0.3)',\r\n    };\r\n    return (\r\n        <div className=\"MenuList\">\r\n          <TopBar active_item={this.props.active_item} onHandleChange={this.props.onHandleChange}></TopBar>\r\n          {\r\n          this.props.menus.map(menu => {\r\n              return <Menu menu={menu} key={menu._id} _id={menu._id} onHandleMenuClick={this.props.onHandleMenuClick} style={this.props.active_item._id === menu._id ? activeStyle : {}}  />\r\n            })\r\n          }\r\n          <hr />\r\n          <a href=\"#addMenu\" onClick={this.props.onAddMenu}>+ Add new</a>\r\n          <a href=\"#removeMenu\" onClick={this.props.onRemoveMenu}>- Delete this</a>\r\n        </div>\r\n\r\n      \r\n    );\r\n  }\r\n}","D:\\Projects\\roggl\\repo\\src\\Components\\ColumnList\\ColumnList.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\Column\\Column.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\Menu\\Menu.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\TopBar\\TopBar.js",[],"D:\\Projects\\roggl\\repo\\src\\util\\Roggl.js",[],"D:\\Projects\\roggl\\repo\\src\\Components\\ColumnListNone\\ColumnListNone.js",["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"63","line":2,"column":16,"nodeType":"61","messageId":"62","endLine":2,"endColumn":22},{"ruleId":"59","severity":1,"message":"64","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":18},{"ruleId":"59","severity":1,"message":"65","line":3,"column":28,"nodeType":"61","messageId":"62","endLine":3,"endColumn":32},{"ruleId":"66","severity":1,"message":"67","line":14,"column":14,"nodeType":"68","endLine":14,"endColumn":44},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Children' is defined but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.","'ColumnList' is defined but never used.","'Logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]